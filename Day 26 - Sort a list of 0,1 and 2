https://practice.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1

Approach - creating three separate lists for 0 , 1 and 2 nodes and merging them later together
T(C)-O(N)
S(C)-O(N)

Node* segregate(Node *head) {
        
        Node *zeroHead= new Node(-1);
        Node *zeroTail = zeroHead;
        Node *oneHead= new Node(-1);
        Node *oneTail = oneHead;
        Node *twoHead= new Node(-1);
        Node *twoTail = twoHead;
        
        Node *curr = head;
        while(curr!=NULL){
             int val = curr->data;
            
            if(val ==0){
                zeroTail->next=curr;
                zeroTail=curr;
            }
            else if(val == 1){
                 oneTail->next=curr;
                oneTail=curr;
            }
            else if(val == 2){
                twoTail->next =curr;
                twoTail = curr;
            }
            curr=curr->next;
        }
        //merging
        if(oneHead->next!=NULL){
            zeroTail->next = oneHead->next;
        }
        else{
            zeroTail->next = twoHead->next;
        }
        oneTail->next = twoHead->next;
        twoTail->next = NULL;
        
        
        head= zeroHead->next;
        
        delete zeroHead;
        delete oneHead;
        delete twoHead;
        return head;
    }

https://practice.geeksforgeeks.org/problems/max-sum-subarray-of-size-k5313/1

Max subarray of size k( Fixed size sliding window algorithm)

long maximumSumSubarray(int K, vector<int> &Arr , int N){
        long int currsum=0;
        long int maxsum=0;
        for(int i=0;i<K;i++){
            currsum=currsum+Arr[i];
        }
        maxsum = max(currsum,maxsum);
        for(int i=K;i<N;i++){
            //discard the leftmost element
            currsum-=Arr[i-K];
            currsum+=Arr[i];
        }
        if(maxsum<currsum)
        maxsum=currsum;
    
    return maxsum;
    }
    
    longest subarray of sum K( Variable size sliding window )
    //approach only works for  positive arrays
    int lenOfLongSubarr(int A[], int N, int K)
{
 
    int i = 0, j = 0, sum = 0;
    int maxLen = INT_MIN;
   
    while (j < N) {
        sum += A[j];
        if (sum < K) {
            j++;
        }
        else if (sum == K) {
            maxLen = max(maxLen, j-i+1);
            j++;
        }
        else if (sum > K) {
            while (sum > K) {
                sum -= A[i];
                 i++;
            }
              if(sum == K){
              maxLen = max(maxLen, j-i+1);
            }
            j++;
        }
    }
    return maxLen;
}
 
